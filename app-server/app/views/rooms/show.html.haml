%div.template
  %div#message-bubble-template
    %div.message
      %div.message-user-name
      %div.message-body
        %p.text
      %div.time

%div#room{data: { room_id: @room.id, current_user_id: current_user.id } }
  %div.talk-container.flex-layout-box
    %nav.navbar.navbar-default.navbar-fixed-top
      .container-fluid
        %ul.nav.navbar-nav.navbar-left
          %li
            = link_to root_path, class: 'navbar-brand' do
              = "##{@room.name}"
          %li
            %a{href: '#'} range: 5km

    %div.messages

    %nav.navbar.navbar-default.navbar-fixed-bottom
      = form_for @room.messages.new, format: :json, class: 'message-composer', remote: true do |f|
        = f.text_area :body, class: 'form-control', row: 1, placeholder: 'メッセージを入力'
        = f.hidden_field :room_id, value: @room.id
        = f.submit '送信', class: 'btn btn-default'
        - # 以下はハリボテ
        %button.btn.btn-default
          %i.fa.fa-photo
        %button.btn.btn-default
          %i.fa.fa-map-marker

:javascript
  $(document).ready(function(){
    room_id = $('#room').data('room-id');
    current_user_id = $('#room').data('current-user-id');
    template = $('#message-bubble-template');
    messages = $('#room .messages');
    $.getJSON([ '/messages.json?room_id=', room_id ].join(''), function(data){
      data['messages'].forEach(function(message_data){
        message = template.clone();

        if(message_data['user']['id'] == current_user_id) {
          message.find('.message').addClass('message-sent');
        } else {
          message.find('.message').addClass('message-received');
        }

        message.find('.message-user-name').text(message_data['user']['name']);
        message.find('.message-body p.text').text(message_data['body']);
        message.find('.time').text(message_data['created_at']);
        messages.append(message);
      });
    });

    // すべてが終わったらスクロールさせる
    window.scrollTo(0,document.body.scrollHeight)
  });
